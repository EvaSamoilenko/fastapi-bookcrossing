services:
  db:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_USER: ${DB_ADMIN}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bookcrossing_network

  celery:
    build:
      context: ./parser
    container_name: celery-worker
    command: celery -A app.celery_tasks.celery_app worker --loglevel=info
    depends_on:
      - parser
      - redis
      - db
    env_file:
      - .env
    networks:
      - bookcrossing_network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - bookcrossing_network

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_ADMIN=${DB_ADMIN}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    env_file:
      - .env
    volumes:
      - ./app:/app/app
    networks:
      - bookcrossing_network

  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    container_name: parser
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./parser:/app/parser
    networks:
      - bookcrossing_network

volumes:
  postgres_data:
    external: true
    name: lr3_postgres_data

networks:
  bookcrossing_network:
